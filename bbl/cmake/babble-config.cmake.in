set(BABBLE_VERSION @PROJECT_VERSION@)

@PACKAGE_INIT@

set_and_check(BABBLE_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")

check_required_components(babble)

get_filename_component(BABBLE_INSTALL_PREFIX ${CMAKE_CURRENT_LIST_FILE}, PATH)
get_filename_component(BABBLE_INSTALL_PREFIX ${BABBLE_INSTALL_PREFIX}, PATH)
get_filename_component(BABBLE_INSTALL_PREFIX ${BABBLE_INSTALL_PREFIX}, PATH)
get_filename_component(BABBLE_INSTALL_PREFIX ${BABBLE_INSTALL_PREFIX}, PATH)

set(BABBLE_TRANSLATE "${BABBLE_INSTALL_PREFIX}/bin/bbl-translate")
set(BABBLE_GENERATE "${BABBLE_INSTALL_PREFIX}/bin/bbl-genbind")
set(BABBLE_RESOURCE_DIR "${BABBLE_INSTALL_PREFIX}/lib/resource")

include(${CMAKE_CURRENT_LIST_DIR}/bbl-targets.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/babble-functions.cmake)

# Define an "echo" linker that we'll use to output link libraries to a text file
set(CMAKE_ECHO_STANDARD_LIBRARIES ${CMAKE_CXX_STANDARD_LIBRARIES})
set(CMAKE_ECHO_FLAGS ${CMAKE_CXX_FLAGS})
set(CMAKE_ECHO_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS})
set(CMAKE_ECHO_IMPLICIT_LINK_DIRECTORIES ${CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES})
set(
    CMAKE_ECHO_LINK_EXECUTABLE 
    "<CMAKE_COMMAND> -E echo \"<LINK_LIBRARIES>\" > <TARGET>"
)